#!/usr/bin/env python3

from http.server import HTTPServer as BaseHTTPServer, SimpleHTTPRequestHandler
import sys, getopt, os
import webbrowser

wb = webbrowser


def main(argv):
    PORT = 8000
    ADDRESS = "http://localhost:"
    #  DIRECTORY = os.path.join(os.path.dirname(__file__), "")
    DIRECTORY = os.getcwd()
    try:
        opts, args = getopt.getopt(argv, "hd:p:a:", ["directory=", "port=", "address="])
    except getopt.GetoptError:
        print("serve -d <DIRECTORY> -p <PORT> -a <ADDRESS>")
        sys.exit(2)

    for opt, arg in opts:
        if opt == "-h":
            print("serve -d <DIRECTORY> -p <PORT> -a <ADDRESS>")
            sys.exit()
        elif opt in ("-p", "--port"):
            PORT = int(arg)
        elif opt in ("-d", "--directory"):
            DIRECTORY = arg
        elif opt in ("-a", "--address"):
            ADDRESS = arg

    URL = f"{ADDRESS}{PORT}"

    #  print(f"{DIRECTORY!r}")

    class HTTPHandler(SimpleHTTPRequestHandler):
        """This handler uses server.base_path instead of always using os.getcwd()"""

        def translate_path(self, path):
            path = SimpleHTTPRequestHandler.translate_path(self, path)
            relpath = os.path.relpath(path, os.getcwd())
            fullpath = os.path.join(self.server.base_path, relpath)
            return fullpath

    class HTTPServer(BaseHTTPServer):
        """The main server, you pass in base_path which is the path you want to serve requests from"""

        def __init__(self, base_path, server_address, RequestHandlerClass=HTTPHandler):
            self.base_path = base_path
            BaseHTTPServer.__init__(self, server_address, RequestHandlerClass)

    map = SimpleHTTPRequestHandler.extensions_map
    map[""] = "text/plain"

    for key, value in map.items():
        map[key] = value + ";charset=UTF-8"

    try:
        print(f"serving at '{URL}'...")
        wb.open(URL, new=2)
        httpd = HTTPServer(DIRECTORY, ("", PORT))
        httpd.serve_forever()
    except KeyboardInterrupt:
        print()
        sys.exit("\nserver closed!")


if __name__ == "__main__":
    main(sys.argv[1:])

# def run( PORT = 8000, ADDRESS = "http://localhost:"):
#     URL = f"{ADDRESS}{PORT}"
#     Handler = SimpleHTTPRequestHandler
#     map = SimpleHTTPRequestHandler.extensions_map
#     map[""] = "text/plain"

#     for key, value in map.items():
#         map[key] = value + ";charset=UTF-8"

#     with socketserver.TCPServer(("", PORT), Handler) as httpd:
#         try:
#             print(f"serving at '{URL}'...")
#             wb.open(URL, new=2)
#             httpd.serve_forever()
#         except KeyboardInterrupt:
#             print()
#             sys.exit("\nserver closed!")
